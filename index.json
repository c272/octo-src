{
  "api-core/Octo.DiffGenerator.html": {
    "href": "api-core/Octo.DiffGenerator.html",
    "title": "Class DiffGenerator | Octo - Documentation",
    "keywords": "Class DiffGenerator Inheritance System.Object DiffGenerator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class DiffGenerator Methods ApplyDiffMatchPatch(String, String) Applies a generated DiffMatchPatch to the folder given. Declaration public static void ApplyDiffMatchPatch(string loc, string backuploc) Parameters Type Name Description System.String loc System.String backuploc CreateDiffMatchPatch(String, String, String, CollectionDiff) Generates a DiffMatchPatch with manifest at the given location. Declaration public static void CreateDiffMatchPatch(string newloc, string oldloc, string backuploc, CollectionDiff diff) Parameters Type Name Description System.String newloc System.String oldloc System.String backuploc CollectionDiff diff"
  },
  "api-client/Octo_Client.OctoClient.html": {
    "href": "api-client/Octo_Client.OctoClient.html",
    "title": "Class OctoClient | Octo - Documentation",
    "keywords": "Class OctoClient Inheritance System.Object OctoClient Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Client Assembly : Octo-Client.dll Syntax public class OctoClient Constructors OctoClient(String, Int32) Declaration public OctoClient(string address, int port) Parameters Type Name Description System.String address System.Int32 port Fields ClientKeys Declaration public KeyPair ClientKeys Field Value Type Description SharpRSA.KeyPair octoAuth Declaration public NetworkStream<IOctoAuth> octoAuth Field Value Type Description NetworkStream < IOctoAuth > octoProjects Declaration public NetworkStream<IOctoProjects> octoProjects Field Value Type Description NetworkStream < IOctoProjects > octoService Declaration public NetworkStream<IOctoService> octoService Field Value Type Description NetworkStream < IOctoService > ServerAddress Declaration public string ServerAddress Field Value Type Description System.String SessionKey Declaration public Key SessionKey Field Value Type Description SharpRSA.Key Methods GetEncryptedToken() Returns a token encrypted with the server session key. Declaration public byte[] GetEncryptedToken() Returns Type Description System.Byte [] Login(String, String) Logs the user into the server with a given username and password. Declaration public bool Login(string username, string password) Parameters Type Name Description System.String username System.String password Returns Type Description System.Boolean LogOut() Logs the current client user out from the server. Declaration public bool LogOut() Returns Type Description System.Boolean Sucessful/Unsuccessful Register(String, String) Declaration public string Register(string username, string password) Parameters Type Name Description System.String username System.String password Returns Type Description System.String"
  },
  "api-server/Octo_Server.OctoStorage.html": {
    "href": "api-server/Octo_Server.OctoStorage.html",
    "title": "Class OctoStorage | Octo - Documentation",
    "keywords": "Class OctoStorage Inheritance System.Object OctoStorage Implements IOctoStorage Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public class OctoStorage : IOctoStorage Methods Pull(String, Byte[]) Pulls the given repository from the server, given permissions. Declaration public Stream Pull(string repo, byte[] token_encrypted) Parameters Type Name Description System.String repo System.Byte [] token_encrypted Returns Type Description System.IO.Stream Push(String, Dictionary<UInt64, String>, Stream, Byte[]) Declaration public void Push(string repo, Dictionary<ulong, string> commits, Stream fileStream, byte[] token_encrypted) Parameters Type Name Description System.String repo System.Collections.Generic.Dictionary < System.UInt64 , System.String > commits System.IO.Stream fileStream System.Byte [] token_encrypted RollBack(String, Byte[]) Declaration public void RollBack(string repo, byte[] token_encrypted) Parameters Type Name Description System.String repo System.Byte [] token_encrypted Implements IOctoStorage"
  },
  "api-core/Octo.ProjectPermissions.html": {
    "href": "api-core/Octo.ProjectPermissions.html",
    "title": "Struct ProjectPermissions | Octo - Documentation",
    "keywords": "Struct ProjectPermissions Struct to describe which users have what permissions. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Octo Assembly : Octo-Core.dll Syntax public struct ProjectPermissions Fields PermissionLevel Declaration public UserPermissions PermissionLevel Field Value Type Description UserPermissions User Declaration public string User Field Value Type Description System.String"
  },
  "api-core/Octo.IOctoAuth.html": {
    "href": "api-core/Octo.IOctoAuth.html",
    "title": "Interface IOctoAuth | Octo - Documentation",
    "keywords": "Interface IOctoAuth Octo Authorization interface for logging in, logging out, and verifying users. Namespace : Octo Assembly : Octo-Core.dll Syntax [ServiceContract] public interface IOctoAuth Methods Login(String, LockedBytes, Key) Function to log the user into the server. Defined server-side. Declaration [OperationContract] [WebInvoke(BodyStyle = WebMessageBodyStyle.Wrapped)] KeyValuePair<bool, byte[]> Login(string user, LockedBytes signed_pass, Key client_pub) Parameters Type Name Description System.String user The username of the user. SharpRSA.LockedBytes signed_pass The password of the user, encrypted using session key. SharpRSA.Key client_pub The public key of the client. Returns Type Description System.Collections.Generic.KeyValuePair < System.Boolean , System.Byte []> A success/fail bool, and the client token (encrypted). LogOut(Byte[]) Logs the user out from the server, provided they were logged in. Defined server-side. Declaration [OperationContract] [WebInvoke(BodyStyle = WebMessageBodyStyle.Wrapped)] bool LogOut(byte[] token) Parameters Type Name Description System.Byte [] token The token of the user, encrypted with the session key. Returns Type Description System.Boolean Register(String, LockedBytes) Function to register the user for an account on the server. Defined server-side. Declaration [OperationContract] [WebInvoke(BodyStyle = WebMessageBodyStyle.Wrapped)] string Register(string user, LockedBytes signed_pass) Parameters Type Name Description System.String user The username of the user. SharpRSA.LockedBytes signed_pass The password of the user, encrypted using session key. Returns Type Description System.String Success/failure message."
  },
  "api-server/Octo_Server.Permissions.html": {
    "href": "api-server/Octo_Server.Permissions.html",
    "title": "Class Permissions | Octo - Documentation",
    "keywords": "Class Permissions Inheritance System.Object Permissions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public class Permissions"
  },
  "api-server/Octo_Server.Error.html": {
    "href": "api-server/Octo_Server.Error.html",
    "title": "Class Error | Octo - Documentation",
    "keywords": "Class Error A public class to handle any error-based interaction in Octo. Inheritance System.Object Error Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public class Error Methods Print(String) Declaration public static void Print(string e) Parameters Type Name Description System.String e"
  },
  "api-core/Octo.Project.html": {
    "href": "api-core/Octo.Project.html",
    "title": "Class Project | Octo - Documentation",
    "keywords": "Class Project Parent class for all version control instances in Octo. Holds everything pertaining to a specific instance of version control (issues, chat, repository) as well as an ID and name. Inheritance System.Object Project Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class Project Constructors Project(String, String) Basic constructor for a project, setting name and location. Declaration public Project(string Name_, string Location_) Parameters Type Name Description System.String Name_ Name of the repo (should be synced with server). System.String Location_ File location (relative) of the repo on the machine. Fields Location Declaration public string Location Field Value Type Description System.String Name Declaration public string Name Field Value Type Description System.String Permissions Declaration public List<ProjectPermissions> Permissions Field Value Type Description System.Collections.Generic.List < ProjectPermissions > Methods UserHasPermissions(String, UserPermissions) Checks whether a given user has the permission level specified for this project. Declaration public bool UserHasPermissions(string user, UserPermissions level) Parameters Type Name Description System.String user The username of the user to check. UserPermissions level The level the user must have to return true. Returns Type Description System.Boolean True/false does have permissions."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Octo - Documentation",
    "keywords": "Add your introductions here!"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Octo - Documentation",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to src folder and run docfx to generate a REAL API Documentation !"
  },
  "api-core/Octo.IOctoService.html": {
    "href": "api-core/Octo.IOctoService.html",
    "title": "Interface IOctoService | Octo - Documentation",
    "keywords": "Interface IOctoService The public interface outline for basic Octo functions, with function prototypes. Namespace : Octo Assembly : Octo-Core.dll Syntax [ServiceContract] public interface IOctoService Methods ACK() Asks the server for acknowledgement of a connection. Declaration [OperationContract] [WebGet] string ACK() Returns Type Description System.String String response of acknowledgement or rejection. GetSessionKey() Gets a session key for the user for encrypting sensitive data. Declaration [OperationContract] [WebGet] Key GetSessionKey() Returns Type Description SharpRSA.Key A valid session key."
  },
  "api-server/Octo_Server.Server.html": {
    "href": "api-server/Octo_Server.Server.html",
    "title": "Class Server | Octo - Documentation",
    "keywords": "Class Server Inheritance System.Object Server Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public class Server Constructors Server() Declaration public Server() Fields authhost Declaration public WebServiceHost authhost Field Value Type Description System.ServiceModel.Web.WebServiceHost authservice_endpoint Declaration public ServiceEndpoint authservice_endpoint Field Value Type Description System.ServiceModel.Description.ServiceEndpoint Hostname Declaration public string Hostname Field Value Type Description System.String IP Declaration public string IP Field Value Type Description System.String kp Declaration public static KeyPair kp Field Value Type Description SharpRSA.KeyPair octoservice_endpoint Declaration public ServiceEndpoint octoservice_endpoint Field Value Type Description System.ServiceModel.Description.ServiceEndpoint Port Declaration public int Port Field Value Type Description System.Int32 projecthost Declaration public WebServiceHost projecthost Field Value Type Description System.ServiceModel.Web.WebServiceHost projectservice_endpoint Declaration public ServiceEndpoint projectservice_endpoint Field Value Type Description System.ServiceModel.Description.ServiceEndpoint servicehost Declaration public WebServiceHost servicehost Field Value Type Description System.ServiceModel.Web.WebServiceHost storagehost Declaration public WebServiceHost storagehost Field Value Type Description System.ServiceModel.Web.WebServiceHost storagehost_endpoint Declaration public ServiceEndpoint storagehost_endpoint Field Value Type Description System.ServiceModel.Description.ServiceEndpoint Methods ParseConfigFileAt(String) Loads and parses the config file at the given location. Declaration public void ParseConfigFileAt(string location) Parameters Type Name Description System.String location The file location (local to the exe) of the config. Start() Starts the server, and opens the HTTPS endpoints. Declaration public void Start() Stop() Stops the server, closing the HTTPS endpoints. Declaration public void Stop()"
  },
  "api-client/Octo_Client.ProjectManager.html": {
    "href": "api-client/Octo_Client.ProjectManager.html",
    "title": "Class ProjectManager | Octo - Documentation",
    "keywords": "Class ProjectManager Inheritance System.Object ProjectManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Client Assembly : Octo-Client.dll Syntax public class ProjectManager Constructors ProjectManager(OctoClient) Basic constructor, takes a client as input. Declaration public ProjectManager(OctoClient c) Parameters Type Name Description OctoClient c Methods CreateProject(String) Wrapper to create a project on the server side. Declaration public bool CreateProject(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean DeleteProject(String) Declaration public bool DeleteProject(string name) Parameters Type Name Description System.String name Returns Type Description System.Boolean GetAvailableProjects() Declaration public KeyValuePair<bool, List<Project>> GetAvailableProjects() Returns Type Description System.Collections.Generic.KeyValuePair < System.Boolean , System.Collections.Generic.List < Project >> SetPermissions(String, String, UserPermissions) Declaration public bool SetPermissions(string user, string projectName, UserPermissions perms) Parameters Type Name Description System.String user System.String projectName UserPermissions perms Returns Type Description System.Boolean"
  },
  "api-server/Octo_Server.html": {
    "href": "api-server/Octo_Server.html",
    "title": "Namespace Octo_Server | Octo - Documentation",
    "keywords": "Namespace Octo_Server Classes Constants Error A public class to handle any error-based interaction in Octo. OctoProjects OctoService OctoStorage Permissions Serialize Server Structs User"
  },
  "api-server/Octo_Server.OctoProjects.html": {
    "href": "api-server/Octo_Server.OctoProjects.html",
    "title": "Class OctoProjects | Octo - Documentation",
    "keywords": "Class OctoProjects Inheritance System.Object OctoProjects Implements IOctoProjects Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public class OctoProjects : IOctoProjects Constructors OctoProjects() The OctoProjects implementation. For more base information, see the OctoCore docs on IOctoProjects. Declaration public OctoProjects() Fields ProjectDBLocation Declaration public string ProjectDBLocation Field Value Type Description System.String Projects Declaration public static List<Project> Projects Field Value Type Description System.Collections.Generic.List < Project > Methods CreateProject(String, Byte[]) Declaration public bool CreateProject(string name, byte[] token_encrypted) Parameters Type Name Description System.String name System.Byte [] token_encrypted Returns Type Description System.Boolean DeleteProject(String, Byte[]) Declaration public bool DeleteProject(string project, byte[] token_encrypted) Parameters Type Name Description System.String project System.Byte [] token_encrypted Returns Type Description System.Boolean GetAvailableProjects(Byte[]) Gets all projects available to the connecting user. Declaration public KeyValuePair<bool, List<Project>> GetAvailableProjects(byte[] token_encrypted) Parameters Type Name Description System.Byte [] token_encrypted The user's encrypted token. Returns Type Description System.Collections.Generic.KeyValuePair < System.Boolean , System.Collections.Generic.List < Project >> A list of available projects. LoadProjectDB() Declaration public void LoadProjectDB() SaveProjectDB() Declaration public void SaveProjectDB() SetUserPermissions(String, String, UserPermissions, Byte[]) Sets a user's permissions for a project, given the attempting user has full permissions. Declaration public bool SetUserPermissions(string project, string user, UserPermissions perms, byte[] token_encrypted) Parameters Type Name Description System.String project System.String user UserPermissions perms System.Byte [] token_encrypted Returns Type Description System.Boolean Implements IOctoProjects"
  },
  "api-core/Octo.UserPermissions.html": {
    "href": "api-core/Octo.UserPermissions.html",
    "title": "Enum UserPermissions | Octo - Documentation",
    "keywords": "Enum UserPermissions Namespace : Octo Assembly : Octo-Core.dll Syntax public enum UserPermissions Fields Name Description FULL_PERMISSIONS NOPERMS READ_PERMISSIONS WRITEREAD_PERMISSIONS"
  },
  "api-server/Octo_Server.Serialize.html": {
    "href": "api-server/Octo_Server.Serialize.html",
    "title": "Class Serialize | Octo - Documentation",
    "keywords": "Class Serialize Inheritance System.Object Serialize Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public static class Serialize Methods FromJSON<T>(String) Declaration public static T FromJSON<T>(string filePath) where T : new() Parameters Type Name Description System.String filePath Returns Type Description T Type Parameters Name Description T ToJSON<T>(String, T, Boolean) Declaration public static void ToJSON<T>(string filePath, T objectToWrite, bool append = false) where T : new() Parameters Type Name Description System.String filePath T objectToWrite System.Boolean append Type Parameters Name Description T"
  },
  "api-server/Octo_Server.OctoService.html": {
    "href": "api-server/Octo_Server.OctoService.html",
    "title": "Class OctoService | Octo - Documentation",
    "keywords": "Class OctoService Inheritance System.Object OctoService Implements IOctoService Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public class OctoService : IOctoService Methods ACK() Declaration public string ACK() Returns Type Description System.String GetSessionKey() Declaration public Key GetSessionKey() Returns Type Description SharpRSA.Key Implements IOctoService"
  },
  "api-core/Octo.IOctoProjects.html": {
    "href": "api-core/Octo.IOctoProjects.html",
    "title": "Interface IOctoProjects | Octo - Documentation",
    "keywords": "Interface IOctoProjects Project interface for clients attempting to manage repos. Namespace : Octo Assembly : Octo-Core.dll Syntax [ServiceContract] public interface IOctoProjects Methods CreateProject(String, Byte[]) Creates a project on the server given a name and token. Declaration [OperationContract] [WebInvoke] bool CreateProject(string name, byte[] token_encrypted) Parameters Type Name Description System.String name The name of the project to create. System.Byte [] token_encrypted The user's token encrypted with a session key. Returns Type Description System.Boolean Success of creation. DeleteProject(String, Byte[]) Declaration [OperationContract] [WebInvoke] bool DeleteProject(string project, byte[] token_encrypted) Parameters Type Name Description System.String project System.Byte [] token_encrypted Returns Type Description System.Boolean GetAvailableProjects(Byte[]) Declaration [OperationContract] [WebInvoke] KeyValuePair<bool, List<Project>> GetAvailableProjects(byte[] token_encrypted) Parameters Type Name Description System.Byte [] token_encrypted Returns Type Description System.Collections.Generic.KeyValuePair < System.Boolean , System.Collections.Generic.List < Project >> SetUserPermissions(String, String, UserPermissions, Byte[]) Sets a user's permission level on a given project. Declaration [OperationContract] [WebInvoke] bool SetUserPermissions(string project, string user, UserPermissions perms, byte[] token_encrypted) Parameters Type Name Description System.String project The name of the repo to set permissions on. System.String user The user to set permissions for. UserPermissions perms The permission level of the user. System.Byte [] token_encrypted The token of the user, encrypted with the session key. Returns Type Description System.Boolean"
  },
  "api-core/Octo.Repository.html": {
    "href": "api-core/Octo.Repository.html",
    "title": "Class Repository | Octo - Documentation",
    "keywords": "Class Repository Holds all files and change data for the project, as well as signing keys. Anything that is uploaded or downloaded directly from the server is held here. Inheritance System.Object Repository Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class Repository Constructors Repository(String, String) Repository basic constructor, creates a vault, and sets location. Declaration public Repository(string loc, string vaultLoc = \".octo\") Parameters Type Name Description System.String loc System.String vaultLoc Fields Commits Declaration public Dictionary<ulong, string> Commits Field Value Type Description System.Collections.Generic.Dictionary < System.UInt64 , System.String > DeltaVault Declaration public Vault DeltaVault Field Value Type Description Vault Location Declaration public string Location Field Value Type Description System.String Properties Version The \"Version\" property is simply a mirror for deltaVault.CurrentVersion. Declaration public ulong Version { get; set; } Property Value Type Description System.UInt64 Methods CreateBackup(String) Creates a backup of the current repository. Declaration public void CreateBackup(string commitMessage) Parameters Type Name Description System.String commitMessage RollBack() Rolls back to the previous version of the repository. Declaration public void RollBack() WriteRepoConfig() Writes the generic repo config to the octo directory. Declaration public void WriteRepoConfig()"
  },
  "api-core/Octo.DirectoryCollection.html": {
    "href": "api-core/Octo.DirectoryCollection.html",
    "title": "Class DirectoryCollection | Octo - Documentation",
    "keywords": "Class DirectoryCollection A tree class of files and file names. Contains a root node \"Directory\". Inheritance System.Object DirectoryCollection Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class DirectoryCollection Constructors DirectoryCollection() Initializes a node with no files. Declaration public DirectoryCollection() DirectoryCollection(DirectoryNode, String) Initializes a node with a given root node, and a spoofed location. Declaration public DirectoryCollection(DirectoryNode Root_, string spoofedLoc) Parameters Type Name Description DirectoryNode Root_ System.String spoofedLoc DirectoryCollection(String) Initialize node recursively at location. Declaration public DirectoryCollection(string loc) Parameters Type Name Description System.String loc DirectoryCollection(String, String) Declaration public DirectoryCollection(string loc, string root) Parameters Type Name Description System.String loc System.String root Fields Root Declaration public DirectoryNode Root Field Value Type Description DirectoryNode RootPath Declaration public string RootPath Field Value Type Description System.String Methods MergeCollections(DirectoryNode, DirectoryNode, DirectoryNode) Merges two DirectoryCollections into one. Declaration public static DirectoryNode MergeCollections(DirectoryNode old, DirectoryNode new_, DirectoryNode parentNode = null) Parameters Type Name Description DirectoryNode old Old directory collection. DirectoryNode new_ New directory collectoin. DirectoryNode parentNode Returns Type Description DirectoryNode A merged set in a DirNode."
  },
  "api-core/Octo.Config.html": {
    "href": "api-core/Octo.Config.html",
    "title": "Class Config | Octo - Documentation",
    "keywords": "Class Config Inheritance System.Object Config Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class Config Methods ParseConfig(String) A simple method for parsing a standard .cfg configuration file. Declaration public static Dictionary<string, string> ParseConfig(string s) Parameters Type Name Description System.String s The raw config file, as a string. Returns Type Description System.Collections.Generic.Dictionary < System.String , System.String > A map of parameters and values."
  },
  "api-server/Octo_Server.Constants.html": {
    "href": "api-server/Octo_Server.Constants.html",
    "title": "Class Constants | Octo - Documentation",
    "keywords": "Class Constants Inheritance System.Object Constants Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public static class Constants Fields ProjectsLocation Declaration public static string ProjectsLocation Field Value Type Description System.String ServerLocation Declaration public static string ServerLocation Field Value Type Description System.String StreamLocation Declaration public static string StreamLocation Field Value Type Description System.String"
  },
  "api-core/Octo.Vault.html": {
    "href": "api-core/Octo.Vault.html",
    "title": "Class Vault | Octo - Documentation",
    "keywords": "Class Vault Public class which holds reverse deltas for the project. Inheritance System.Object Vault Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class Vault Constructors Vault(String) Basic vault constructor taking a file location. Declaration public Vault(string vaultLocation) Parameters Type Name Description System.String vaultLocation Fields CurrentVersion Declaration public ulong CurrentVersion Field Value Type Description System.UInt64 Location Declaration public string Location Field Value Type Description System.String Methods CreateBackup(String) Creates a backup of the current DirectoryCollection. Declaration public void CreateBackup(string loc) Parameters Type Name Description System.String loc RollBack(String) Rolls back the current version of the repository by one commit. Declaration public void RollBack(string loc) Parameters Type Name Description System.String loc"
  },
  "api-core/Octo.FolderZipManager.html": {
    "href": "api-core/Octo.FolderZipManager.html",
    "title": "Class FolderZipManager | Octo - Documentation",
    "keywords": "Class FolderZipManager A wrapper class which allows the creation and usage of GZipped streams in memory. Inheritance System.Object FolderZipManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class FolderZipManager Constructors FolderZipManager(String, String) Constructor to automatically zip a folder. Declaration public FolderZipManager(string folder, string zipFullPath) Parameters Type Name Description System.String folder The folder to zip. System.String zipFullPath The desired temporary storage location. Methods GetGZippedStream() Returns a GZipped stream of the original folder. Declaration public MemoryStream GetGZippedStream() Returns Type Description System.IO.MemoryStream GZipped folder stream (MemStream) SaveFolderFromStream(MemoryStream, String, String) Saves a folder from a given stream that has been processed by FZM. Ensure that ZipExtractPath is NOT within folderPath. Declaration public static void SaveFolderFromStream(MemoryStream s, string zipExtractPath, string folderPath) Parameters Type Name Description System.IO.MemoryStream s System.String zipExtractPath System.String folderPath"
  },
  "api-core/Octo.Manifest.html": {
    "href": "api-core/Octo.Manifest.html",
    "title": "Class Manifest | Octo - Documentation",
    "keywords": "Class Manifest Class to process and generate diff manifests. Inheritance System.Object Manifest Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class Manifest Methods Parse(String) Parse a manifest file (as string) into a valid CollectionDiff. Declaration public static CollectionDiff Parse(string manstring) Parameters Type Name Description System.String manstring The manifest file (as string). Returns Type Description CollectionDiff CollectionDiff of the original manifest."
  },
  "api-core/Octo.DirectoryNode.html": {
    "href": "api-core/Octo.DirectoryNode.html",
    "title": "Class DirectoryNode | Octo - Documentation",
    "keywords": "Class DirectoryNode A single node which may comprise a tree. Contains children and a reference to the parent object. Inheritance System.Object DirectoryNode Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class DirectoryNode Constructors DirectoryNode() Blank constructor for manually creating a null node. Declaration public DirectoryNode() DirectoryNode(String, String, DirectoryNode) Recursive search constructor, for normal usage. Declaration public DirectoryNode(string loc, string rootPath, DirectoryNode parent = null) Parameters Type Name Description System.String loc System.String rootPath DirectoryNode parent Fields ChildFiles Declaration public List<string> ChildFiles Field Value Type Description System.Collections.Generic.List < System.String > ChildFolders Declaration public List<DirectoryNode> ChildFolders Field Value Type Description System.Collections.Generic.List < DirectoryNode > DirectoryName Declaration public string DirectoryName Field Value Type Description System.String Parent Declaration public DirectoryNode Parent Field Value Type Description DirectoryNode"
  },
  "api-client/Octo_Client.ClientInfo.html": {
    "href": "api-client/Octo_Client.ClientInfo.html",
    "title": "Struct ClientInfo | Octo - Documentation",
    "keywords": "Struct ClientInfo Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Octo_Client Assembly : Octo-Client.dll Syntax public struct ClientInfo Fields octoAuth Declaration public NetworkStream<IOctoAuth> octoAuth Field Value Type Description NetworkStream < IOctoAuth > octoProjects Declaration public NetworkStream<IOctoProjects> octoProjects Field Value Type Description NetworkStream < IOctoProjects > octoService Declaration public NetworkStream<IOctoService> octoService Field Value Type Description NetworkStream < IOctoService > UserToken Declaration public byte[] UserToken Field Value Type Description System.Byte []"
  },
  "api-client/Octo_Client.html": {
    "href": "api-client/Octo_Client.html",
    "title": "Namespace Octo_Client | Octo - Documentation",
    "keywords": "Namespace Octo_Client Classes NetworkStream<T> OctoClient ProjectManager Structs ClientInfo"
  },
  "api-server/Octo_Server.User.html": {
    "href": "api-server/Octo_Server.User.html",
    "title": "Struct User | Octo - Documentation",
    "keywords": "Struct User Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Octo_Server Assembly : Octo-Server.dll Syntax public struct User Fields Password Declaration public string Password Field Value Type Description System.String Permissions Declaration public List<Permissions> Permissions Field Value Type Description System.Collections.Generic.List < Permissions > Username Declaration public string Username Field Value Type Description System.String"
  },
  "api-core/Octo.Utils.html": {
    "href": "api-core/Octo.Utils.html",
    "title": "Class Utils | Octo - Documentation",
    "keywords": "Class Utils Inheritance System.Object Utils Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class Utils Methods CopyAll(DirectoryInfo, DirectoryInfo) Wrapper for CopyDirectory, taking DirInfos instead of locations. Declaration public static void CopyAll(DirectoryInfo source, DirectoryInfo target) Parameters Type Name Description System.IO.DirectoryInfo source System.IO.DirectoryInfo target CopyDirectory(String, String) Copies an entire directory (including contents) from one place to another, recursively. Declaration public static void CopyDirectory(string sourceDirectory, string targetDirectory) Parameters Type Name Description System.String sourceDirectory System.String targetDirectory FilesAreEqual(FileInfo, FileInfo) Checks a set amount of random bits in the file to see if they are equal. Declaration public static bool FilesAreEqual(FileInfo first, FileInfo second) Parameters Type Name Description System.IO.FileInfo first First file. System.IO.FileInfo second Second file. Returns Type Description System.Boolean RawByteString(Byte[]) Prints the raw byte representation of a byte array. Declaration public static string RawByteString(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Bytes to print. Returns Type Description System.String WriteLineColour(String, ConsoleColor) Writes the given string in a console colour. Declaration public static void WriteLineColour(string toWrite, ConsoleColor c) Parameters Type Name Description System.String toWrite System.ConsoleColor c"
  },
  "api-core/Octo.CollectionDiff.html": {
    "href": "api-core/Octo.CollectionDiff.html",
    "title": "Class CollectionDiff | Octo - Documentation",
    "keywords": "Class CollectionDiff Struct that describes the difference between two collections. Inheritance System.Object CollectionDiff Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo Assembly : Octo-Core.dll Syntax public class CollectionDiff Constructors CollectionDiff() Declaration public CollectionDiff() Fields addedFiles Declaration public List<string> addedFiles Field Value Type Description System.Collections.Generic.List < System.String > addedFolders Declaration public List<string> addedFolders Field Value Type Description System.Collections.Generic.List < System.String > changedFiles Declaration public List<string> changedFiles Field Value Type Description System.Collections.Generic.List < System.String > removedFiles Declaration public List<string> removedFiles Field Value Type Description System.Collections.Generic.List < System.String > removedFolders Declaration public List<string> removedFolders Field Value Type Description System.Collections.Generic.List < System.String > Methods ComputeDiff(DirectoryCollection, DirectoryCollection, Boolean) Declaration public static CollectionDiff ComputeDiff(DirectoryCollection self, DirectoryCollection comparator, bool noReturn = false) Parameters Type Name Description DirectoryCollection self DirectoryCollection comparator System.Boolean noReturn Returns Type Description CollectionDiff GenerateManifest() Generates an Octo format manifest, which can be reparsed or saved to file. Declaration public string GenerateManifest() Returns Type Description System.String An octo manifest, as string."
  },
  "api-client/Octo_Client.NetworkStream-1.html": {
    "href": "api-client/Octo_Client.NetworkStream-1.html",
    "title": "Class NetworkStream<T> | Octo - Documentation",
    "keywords": "Class NetworkStream<T> Inheritance System.Object NetworkStream<T> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Octo_Client Assembly : Octo-Client.dll Syntax public class NetworkStream<T> Type Parameters Name Description T Constructors NetworkStream(String) Declaration public NetworkStream(string uri) Parameters Type Name Description System.String uri Fields channel Declaration public T channel Field Value Type Description T"
  },
  "api-core/Octo.html": {
    "href": "api-core/Octo.html",
    "title": "Namespace Octo | Octo - Documentation",
    "keywords": "Namespace Octo Classes CollectionDiff Struct that describes the difference between two collections. Config DiffGenerator DirectoryCollection A tree class of files and file names. Contains a root node \"Directory\". DirectoryNode A single node which may comprise a tree. Contains children and a reference to the parent object. FolderZipManager A wrapper class which allows the creation and usage of GZipped streams in memory. Manifest Class to process and generate diff manifests. Project Parent class for all version control instances in Octo. Holds everything pertaining to a specific instance of version control (issues, chat, repository) as well as an ID and name. Repository Holds all files and change data for the project, as well as signing keys. Anything that is uploaded or downloaded directly from the server is held here. Utils Vault Public class which holds reverse deltas for the project. Structs ProjectPermissions Struct to describe which users have what permissions. Interfaces IOctoAuth Octo Authorization interface for logging in, logging out, and verifying users. IOctoProjects Project interface for clients attempting to manage repos. IOctoService The public interface outline for basic Octo functions, with function prototypes. IOctoStorage Enums UserPermissions"
  },
  "api-core/Octo.IOctoStorage.html": {
    "href": "api-core/Octo.IOctoStorage.html",
    "title": "Interface IOctoStorage | Octo - Documentation",
    "keywords": "Interface IOctoStorage Namespace : Octo Assembly : Octo-Core.dll Syntax [ServiceContract] public interface IOctoStorage Methods Pull(String, Byte[]) Pull changes for a given repository since last commit to local. Declaration [OperationContract] [WebInvoke(BodyStyle = WebMessageBodyStyle.Wrapped)] Stream Pull(string repo, byte[] token_encrypted) Parameters Type Name Description System.String repo The repository to pull from. System.Byte [] token_encrypted The user's token, encrypted with the session key. Returns Type Description System.IO.Stream A file stream containing the commmits required. Push(String, Dictionary<UInt64, String>, Stream, Byte[]) Pushes the changes for a given repository since last commit to the server. Declaration [OperationContract] [WebInvoke(BodyStyle = WebMessageBodyStyle.Wrapped)] void Push(string repo, Dictionary<ulong, string> commits, Stream fileStream, byte[] token_encrypted) Parameters Type Name Description System.String repo The name of the repo to push. System.Collections.Generic.Dictionary < System.UInt64 , System.String > commits The list of commits to push. System.IO.Stream fileStream A file stream of the commits to add. System.Byte [] token_encrypted The user's token, encrypted with the session key. RollBack(String, Byte[]) Reverts an existing commit, given the client has access. Declaration [OperationContract] [WebInvoke(BodyStyle = WebMessageBodyStyle.Wrapped)] void RollBack(string repo, byte[] token_encrypted) Parameters Type Name Description System.String repo The repository to roll back. System.Byte [] token_encrypted The user's token, encrypted using the session key."
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to the Octo Documentation. | Octo - Documentation",
    "keywords": "Welcome to the Octo Documentation. To learn how to quickly start up an Octo project, please refer to the Quick Start Guide . Or, follow the steps below. Quick Start Configuring the Server First, you must create a new text file in the server directory named \"_config.octo\". Then, in this file, you can specify the properties you wish to use, if they are different from the default values. You can read about the default values and config properties in Octo here. Here is an extremely simple example config file. Note: A config file must exist for the server to run, even if it is blank. server_ip=127.0.0.1 server_port=13000 Once you have created this config file, you can then start the server. When starting it up for the first time, please change the default user account from \"admin\". Further configuration of individual projects is all done client-side. Logging in with the default user will allow you to change most of these settings. Using the GUI Client The GUI client currently does not exist. Using the Client API The client API is made up of three main components: The Project Manager (octoProjectManager) The Authentication Service (octoAuthService) The Client Hook When attempting to connect to a server, use the authentication service to connect to the address, like in the example below. var myClient = new OctoClient(\"myepicwebsite.com\", 6920); bool success = myClient.Login(\"Jimmy_Neutron\", \"jimmyneutron123\"); you can then use the Project Manager to create and destroy projects, push and pull projects, and add or change permission for users. This is done like so: //Create a project. myClient.octoProjects.CreateProject(\"ProjectName\"); //Set user permissions for a project. myClient.octoProjects.SetUserPermissions(\"ProjectName\", \"someUser\", UserPermissions.FULL_PERMISSION); //Delete a project. myClient.octoProjects.DeleteProject(\"ProjectName\"); You can also access the user's raw token (if required for some purpose) by using myClient.GetEncryptedToken() ."
  }
}